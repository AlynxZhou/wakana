set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/CMakeModules")
set(CMAKE_C_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -std=gnu11 -Wall -g -D__DEBUG__")
set(CMAKE_C_FLAGS_RELEASE "$ENV{CXXFLAGS} -O2 -std=gnu11")
set(EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/bin")
set(LIBRARY_OUTPUT_PATH "${PROJECT_BINARY_DIR}/lib")

find_package(Wayland REQUIRED)
find_package(WaylandProtocols 1.15 REQUIRED)
find_package(WaylandScanner REQUIRED)
find_package(Xkbcommon REQUIRED)
find_package(Pixman REQUIRED)

set(
	XDG_SHELL_PROTOCOL_XML
	"${WAYLAND_PROTOCOLS_PKGDATADIR}/stable/xdg-shell/xdg-shell.xml"
)
set(
	XDG_SHELL_PROTOCOL_HEADER
	"${CMAKE_CURRENT_BINARY_DIR}/xdg-shell-protocol.h"
)
set(
	XDG_SHELL_PROTOCOL_SOURCE
	"${CMAKE_CURRENT_BINARY_DIR}/xdg-shell-protocol.c"
)
set_source_files_properties(${XDG_SHELL_PROTOCOL_HEADER} GENERATED)
set_source_files_properties(${XDG_SHELL_PROTOCOL_SOURCE} GENERATED)
add_custom_command(
	OUTPUT ${XDG_SHELL_PROTOCOL_HEADER}
	COMMAND ${WAYLAND_SCANNER_EXECUTABLE} "server-header" ${XDG_SHELL_PROTOCOL_XML} ${XDG_SHELL_PROTOCOL_HEADER}
	VERBATIM
)
add_custom_command(
	OUTPUT ${XDG_SHELL_PROTOCOL_SOURCE}
	COMMAND ${WAYLAND_SCANNER_EXECUTABLE} "private-code" ${XDG_SHELL_PROTOCOL_XML} ${XDG_SHELL_PROTOCOL_SOURCE}
	VERBATIM
)

include_directories(
	${WAYLAND_SERVER_INCLUDE_DIRS}
	${PIXMAN_INCLUDE_DIRS}
	${CMAKE_CURRENT_BINARY_DIR}
	"."
)
aux_source_directory("." WAKANA_SOURCES)
add_executable(
	"wakana"
	${WAKANA_SOURCES}
	${XDG_SHELL_PROTOCOL_HEADER}
	${XDG_SHELL_PROTOCOL_SOURCE}
)
target_compile_definitions(
	"wakana"
	PUBLIC
	${WAYLAND_SERVER_DEFINITIONS}
	${XKBCOMMON_DEFINITIONS}
	${PIXMAN_DEFINITIONS}
)
target_link_libraries(
	"wakana"
	"wlroots"
	${WAYLAND_SERVER_LIBRARIES}
	${XKBCOMMON_LIBRARIES}
	${PIXMAN_LIBRARIES}
)
